{"ast":null,"code":"var _jsxFileName = \"/Users/kevingetz/Desktop/repos/redux-toolkit/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // read specific variable from specific reducer\n  // const count = useSelector((state) => state.counter.count);\n  const {\n    count\n  } = useSelector(state => state.counter);\n\n  // set up dispatch hook to call action\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" The count is: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wrfDiOiW8sSk0Fvg3ZYz1pZ8LMY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","jsxDEV","_jsxDEV","App","_s","count","state","counter","dispatch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setCount","_c","$RefreshReg$"],"sources":["/Users/kevingetz/Desktop/repos/redux-toolkit/src/App.js"],"sourcesContent":["import './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction App() {\n  // read specific variable from specific reducer\n  // const count = useSelector((state) => state.counter.count);\n  const { count } = useSelector((state) => state.counter);\n  \n  // set up dispatch hook to call action\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <h1> The count is: {count}</h1>\n      <button onClick={() => dispatch}>Increment</button>\n      <button onClick={() => setCount(count - 1 )}>Decrement</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM;IAAEC;EAAM,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;;EAEvD;EACA,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9B,oBACEE,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA;MAAAQ,QAAA,GAAI,iBAAe,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/BZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMP,QAAS;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACnDZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMC,QAAQ,CAACX,KAAK,GAAG,CAAC,CAAG;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3D;AAEV;AAACV,EAAA,CAfQD,GAAG;EAAA,QAGQJ,WAAW,EAGZC,WAAW;AAAA;AAAAiB,EAAA,GANrBd,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}